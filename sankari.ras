program Sankari;
/*
					S.cavenger
					A.rmed w/
					N.otable
					K.illing
					A.rsenal
					R.escue
					I.ntent

			for the 16kB expanded Vic 20

				(C)2021 Jari Tulilahti
					Firebay games

	For Commodore Finland Game Competition 2021
	
	Game design and coding: Jari Tulilahti
	Music: Mikko Suontausta
	
	Created with Turbo Rascal

	---------------------------------------------------

	_memoryzp 	- all zero page variables and resources
	_constants	- game constants & parameters
	_memory		- all main RAM variables
	_lookup		- read only look up tables
*/
var
	i,j:byte;

@use "input/key"

//@define DEBUG		1		// uncomment to show debugging timings
//@define VBMDEBUG	1		// uncomment to enable VBM debug

@VicMemoryConfig "16k"
@projectsettings "ignorebasicsysstart" 0
@projectsettings "basicsysaddress" $1200
@projectsettings "startaddress" $2000

// Game has been split into multiple files for better organization,
// including files here
@include "constants.inc"	// Game parameters & constants
@include "zeropage.inc"		// variables in Zero Page
@include "binarydata.inc" 	// Binary data
@include "memory.inc"		// variables in main RAM
@include "lookup.inc"		// read only look-up-tables
@include "musicplayer.inc"	// Music player
@include "vbl.inc"			// Vertical blank interrupt


// Main program
begin

	// Initialize VBL
	Vbl_Init();
	
	// Set display mode to 2 and clear screen
	vbmSetDisplayMode(2);
	vbmclear( 0 );
	@ifdef VBMDEBUG
	vbmdebug(1);
	@endif
	vbmClearColor(RED + @MULTICOLOR);	

	AUX_COLOR_AND_VOLUME := %00000010;
	SCREEN_BG_COLOR := BLUE + SCREEN_BG_BLACK;

	fori i := 0 to 19 do
	begin
		p1 := #tiles[0];
		vbmSetPosition2(i<<3, 152);
		vbmDrawTile(p1);
		vbmSetPosition2(i<<3, 160);
		vbmDrawTile(p1);
		vbmSetPosition2(i<<3, 168);
		vbmDrawTile(p1);
	end;

	fori i:=0 to 19 do
	begin
		p1 := colmem[2] + i;
		p1^ := WHITE;
		p1 := colmem[3] + i;
		p1^ := WHITE;
		p1 := colmem[4] + i;
		p1^ := WHITE;
	end;
	
	vbmDrawText(#strTitle, #font8, 1, 40, 8);
	p1 := song_strs[0];
	vbmDrawSmallTextO(p1, #font4, 13, 60, 6);

	i := 0;
	j := 0;
	music_init(i, 6);
	
	// main game loop
	while (true) offpage do 
	begin
		
		@ifdef DEBUG	// for testing speed
		SCREEN_BG_COLOR := BLACK + SCREEN_BG_BLACK;
		@endif
		
		// wait for vertical blank
		while (ticks = oldticks) do begin end;
		oldticks := ticks;

		Key::Read();
		if (Key::Pressed(Key::KF1)) then begin
			i := i xor $30;
			j := j xor 1;
			music_stop();
			vbmClearSmallText(p1, #font4, 13, 60, 6);
			p1 := song_strs[j];
			vbmDrawSmallTextO(p1, #font4, 13, 60, 6);
			music_init(i, 6);
		end;

		@ifdef DEBUG	// for testing speed
		SCREEN_BG_COLOR := CYAN + SCREEN_BG_BLACK;
		@endif
				
	end;

end.
